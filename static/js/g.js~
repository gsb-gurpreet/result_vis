var w = 1100;
var h = 500;
var padding = 75;
var database;
var xScale = d3.scale.linear();
var yScale = d3.scale.linear();
xScale.range([0, (w - padding) ]);
yScale.range([0, (h - padding) ]);
var xAxis = d3.svg.axis()
				.scale(xScale)
				.orient("bottom");
var i = 0;

d3.json("static/data/sub.json", function (data) {
	//for( var i = 0; i < data.length; i++ ) {
		//if( data[i]['code'] ===  "107001 TW" ) {
			var i = 0;
			D = data;
			database = data[i]['obtained_marks_list'];
			xScale.domain([0, data[i]['max_marks']]);
			yScale.domain([0, d3.max(data[i]['obtained_marks_list'])]);
		//}
	//}
	draw();
})
function go () {
			data = D;
			i++;
			i = i % data.length;
			database = data[i]['obtained_marks_list'];
			xScale.domain([0, data[i]['max_marks']]);
			yScale.domain([0, d3.max(data[i]['obtained_marks_list'])]);
			d3.select("#graphContainer").text("")
			draw();
}
function draw() {
	var svg = d3.select("#graphContainer")
				.append("svg")
				.attr("x", w )
				.attr("y", h )
				.attr("width", w )
				.attr("height", h );

	svg.append("g")
		.attr("class", "axis")
		.attr("transform", "translate(" + padding + ", " + (h - .5 * padding) + ")")
		.call(xAxis);

	svg.selectAll("rect")
		.data(database)
		.enter()
		.append("rect")
		.attr("x", function (d, i) {
			return( padding/2 +  i*( w / database.length) );
		})
		.attr("width", function () {
			return( w / (database.length + 10) )
		})
		.attr("y", function (d, i) {
			return( h - yScale(d) - padding / 2 )
		})
		.attr("height", function (d, i) {
			return( yScale(d) );
		})
}
